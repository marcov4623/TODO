doctype html
html(lang="en")
	head
		meta(charset="utf-8")
		meta(name="viewport", content="width=device-width, initial-scale=1")
		title TODO
		include layouts/css.pug
		style(type="text/css").
			@media only screen and (max-width: 600px) {
				.hideOnMobile {
					display:none!important;
				}
			}

			tr.trTableLoader{
				display:none;
				transition : all 2s ease-in-out;
			}

			.table-loader {
				display: flex;
				justify-content: center;
				align-items: center;
				height: 100px;
			}

			.table-loader .spinner-border {
				color: #007bff; /* Adjust color as needed */
			}
			a.btnPager.btn.disabled{
				cursor:not-allowed!important;
				pointer-events: all!important
			}
		
	body(class="hold-transition dark-mode sidebar-mini layout-fixed layout-navbar-fixed layout-footer-fixed sidebar-collapse")
		.wrapper
			// Preloader
			.preloader.flex-column.justify-content-center.align-items-center
				i.fas.fa-list.animation__wobble(style="font-size:40px" height="60", width="60")

			// Navbar
			include layouts/navigation.pug

			// Main Sidebar Container
			include layouts/sidenav.pug

			// Content Wrapper. Contains page content
			.content-wrapper
				// Content Header (Page header)
				.content-header
					.container-fluid
						.row.mb-2
							.col-sm-6
								h1.m-0 Manage List
							.col-sm-6
								ol.breadcrumb.float-sm-right
									li.breadcrumb-item
										a(href="#") TODO
									li.breadcrumb-item.active Manage

				// Main content
				section.content
					.row.justify-content-between
						.col-md-3
							.container-fluid
								.form-group
									label Status
									select#selStatusFilter.form-control
										option(value="%") All 
										option(value="CANCELLED") Cancelled 
										option(value="ONGOING") On Going 
										option(value="FINISHED") Finished  
						.col-md-3
							.container-fluid
								.form-group
									label Items Per Page
									select#selItemsPerPage.form-control
										option(value="5") 5
										option(value="10") 10
										option(value="15") 15
										option(value="20") 20
						
					.container-fluid
						.card
							.card-header.border-transparent
								h3.card-title Todo List

							.card-body.p-0
								.table-responsive
									table#tblTasks.table.m-0
										thead
											tr
												th Title
												th.hideOnMobile Description
												th Status
												th Actions
											tr.text-center.trTableLoader
												td(colspan="4")
													.table-loader
														.spinner-border(role="status")
															span.sr-only Loading...
										tbody
												

							.card-footer.clearfix
								.row.align-items-center.justify-content-between
									div
										label Showing page : 
											b.showCurrentPage 1 out of 2
									div
										a.btnPager.btn.btn-info.btn-sm.m-1.btnPageFirst(href="#") 
											i.fas.fa-chevron-left
											i.fas.fa-chevron-left
										a.btnPager.btn.btn-primary.btn-sm.m-1.btnPagePrev(href="#")
											i.fas.fa-chevron-left
										a.btnPager.btn.btn-primary.btn-sm.m-1.btnPageNext(href="#")
											i.fas.fa-chevron-right
										a.btnPager.btn.btn-info.btn-sm.m-1.btnPageLast(href="#")
											i.fas.fa-chevron-right
											i.fas.fa-chevron-right
									

		//===============================================//
		//=================Modal Section=================//
		//===============================================//

		#modView.modal.fade(aria-modal="true", role="dialog")
			.modal-dialog
				.modal-content
					.modal-header
						h4.modal-title View Task
						button.close(type="button", data-dismiss="modal", aria-label="Close")
							span(aria-hidden="true") ×
					.modal-body
					.modal-footer.justify-content-between
						button.btn.btn-default(type="button", data-dismiss="modal") Close

		#modAddTask.modal.fade(aria-modal="true", role="dialog")
			.modal-dialog
				.modal-content
					.modal-header
						h4.modal-title Add Task
						button.close(type="button", data-dismiss="modal", aria-label="Close")
							span(aria-hidden="true") ×
					.modal-body
						form#frmAddTask(autocomplete="false")
							.form-group
								label Title
								input.form-control.required(type="text" id='txtTaskTitle' name='txtTaskTitle' placeholder='Enter Title')
							.form-group
								label Description
								textarea.form-control.required(id='txtTaskDesc' name='txtTaskDesc' placeholder='Enter Description' rows=2)
							.form-group
								label Status
								select.form-control.required(id='selTaskStatus' name='selTaskStatus')
									option(value="CANCELLED") Cancelled
									option(value="ONGOING" selected) On Going
									option(value="FINISHED") Finished
					.modal-footer.justify-content-between
						button.btn.btn-default(type="button", data-dismiss="modal") Close
						button.btn.btn-primary.modBtnSave(type="button") Save

		#modEditTask.modal.fade(aria-modal="true", role="dialog")
			.modal-dialog
				.modal-content
					.modal-header
						h4.modal-title Edit Task
						button.close(type="button", data-dismiss="modal", aria-label="Close")
							span(aria-hidden="true") ×
					.modal-body
						form#frmEditTask(autocomplete="false")
							.form-group
								label Title
								input.form-control.required(type="text" id='txtEditTaskTitle' name='txtEditTaskTitle' placeholder='Enter Title')
							.form-group
								label Description
								textarea.form-control.required(id='txtEditTaskDesc' name='txtEditTaskDesc' placeholder='Enter Description' rows=2)
							.form-group
								label Status
								select.form-control.required(id='selEditTaskStatus' name='selEditTaskStatus')
									option(value="CANCELLED") Cancelled
									option(value="ONGOING" selected) On Going
									option(value="FINISHED") Finished
					.modal-footer.justify-content-between
						button.btn.btn-default(type="button", data-dismiss="modal") Close
						button.btn.btn-primary.modBtnUpdate(type="button") Save

		#modDeleteTask.modal.fade(aria-modal="true", role="dialog")
			.modal-dialog
				.modal-content
					.modal-header
						h4.modal-title Delete Task
						button.close(type="button", data-dismiss="modal", aria-label="Close")
							span(aria-hidden="true") ×
					.modal-body
						h4 Are you sure you want to delete this task?
					.modal-footer.justify-content-between
						button.btn.btn-default(type="button", data-dismiss="modal") Close
						button.btn.btn-danger.modBtnDelete(type="button") Delete

		#modRestoreTask.modal.fade(aria-modal="true", role="dialog")
			.modal-dialog
				.modal-content
					.modal-header
						h4.modal-title Restore Task
						button.close(type="button", data-dismiss="modal", aria-label="Close")
							span(aria-hidden="true") ×
					.modal-body
						h4 Are you sure you want to restore this task?
					.modal-footer.justify-content-between
						button.btn.btn-default(type="button", data-dismiss="modal") Close
						button.btn.btn-success.modBtnRestore(type="button") Restore

		#modToConfig.modal.fade(aria-modal="true", role="dialog")
			.modal-dialog
				.modal-content
					.modal-header
						h4.modal-title Disconnected
					.modal-body
						h4 Please go to configurations page and cofigure the environment accordingly.
					.modal-footer.justify-content-between
						a.btn.btn-success(href="/config") Configure Now

	// Main Footer
	include layouts/footer.pug
	// REQUIRED SCRIPTS
	include layouts/js.pug
	script.
		$(document).ready(()=>{
			if('#{error}' != '') {
				$("#modToConfig").modal({'show':true,'backdrop':'static','keyboard':false,'focus':true}); 
				return ;
			}
			if('#{deleted}' == '1'){
				$('#btnManage').parents('ul').find('li a').removeClass('active');
				$('#btnDump').addClass('active');
			}else{
				$('#btnManage').parents('ul').find('li a').removeClass('active');
				$('#btnManage').addClass('active');
			}
			

			//========================================
			//Global Variables Here
			//========================================
			let pageCount	=	1;
			let lastCount	=	1;
			//========================================
			//Event Listeners here
			//========================================
			$('#btnAddTask').click(function(e){
				e.preventDefault();
				$('#modAddTask').modal('show');
			});

			fetchRows();
			$('#selStatusFilter').change(function(){
				//reset page count
				pageCount	= 1;
				lastCount	= 1;
				fetchRows();
			})

			$('#selItemsPerPage').change(function(){
				//reset page count
				pageCount	= 1;
				lastCount	= 1;
				fetchRows();
			})

			$('.btnPageFirst').click(function(e){
				e.preventDefault();
				if($(this).hasClass('disabled')) return;
				pageCount = 1;
				fetchRows();
			});

			$('.btnPagePrev').click(function(e){
				e.preventDefault();
				if($(this).hasClass('disabled')) return;
				pageCount = pageCount-1;
				fetchRows();
			});

			$('.btnPageNext').click(function(e){
				e.preventDefault();
				if($(this).hasClass('disabled')) return;
				pageCount = pageCount+1;
				fetchRows();
			});
			
			$('.btnPageLast').click(function(e){
				e.preventDefault();
				if($(this).hasClass('disabled')) return;
				pageCount = lastCount;
				fetchRows();
			});
			
			$(document).on('click','.modBtnSave', function(e){
				e.preventDefault();
				//get save data
				let frmData = new FormData($('#frmAddTask').get(0));
				//validate fields
				
				validateFields($('#frmAddTask'),function(validated){
					if(validated=="NO") return;
					console.log(validated)
					//reset page count
					pageCount	=	1;
					lastCount	=	1;

					$.ajax({
						'type':'POST',
						'url':'/add',
						'data':frmData,
						'processData':false,
						'contentType':false
					}).done((data)=>{

						if(data.error) return toastr.error(data.error);
						$('#modAddTask').modal('hide');
						$('#frmAddTask').get(0).reset();
						fetchRows();
						return toastr.success('Task Saved Successfully!');

					});
				});
			});

			$(document).on('click','.btnView',function(e){
				e.preventDefault();
				$('#modView').modal('show');
				var datas =  $(this).parents('tr').data('databody');
				$('#modView').find('.modal-body').append(`
					<table class="table table-striped">
						<tbody>
							<tr>
								<td>
									<label>Title</label>
									<textarea class="form-control" readonly= true  rows=1>`+datas.title+`</textarea>
								</td>
							</tr>
							<tr>
								<td>
									<label>Description</label>
									<textarea class="form-control" readonly= true rows=3>`+datas.description+`</textarea>
								</td>
							</tr>
							<tr>
								<td>
									<label>Status</label>
									<textarea class="form-control" readonly= true rows=1>`+datas.status+`</textarea>
								</td>
							</tr>
							<tr>
								<td>
									<label>Last Modified Date</label>
									<textarea class="form-control" readonly= true rows=1>`+moment(datas.modifieddate).format('DD-MM-YYYY')+`</textarea>
								</td>
							</tr>
						</tbody>
					</table>
				`);

			});

			$(document).on('click','.btnEdit',function(e){
				e.preventDefault();
				$('#modEditTask').modal('show');
				var datas =  $(this).parents('tr').data('databody');
				
				$('#txtEditTaskTitle').val(datas.title);
				$('#txtEditTaskDesc').val(datas.description);
				$('#selEditTaskStatus').val(datas.status);
				$('.modBtnUpdate').data('id',datas.id);
			});

			$(document).on('click','.modBtnUpdate', function(e){
				e.preventDefault();
				var id = $(this).data('id');
				//get save data
				let frmData = new FormData($('#frmEditTask').get(0));
				frmData.append('id',id);
				//validate fields
				validateFields($('#frmEditTask'),function(validated){
					if(validated=="NO") return;
					//reset page count
					pageCount	=	1;
					lastCount	=	1;

					$.ajax({
						'type':'POST',
						'url':'/edit',
						'data':frmData,
						'processData':false,
						'contentType':false
					}).done((data)=>{
						$('#frmEditTask')[0].reset();
						if(data.error) return toastr.error(data.error);
						$('#modEditTask').modal('hide');
						fetchRows();
						return toastr.success('Task Saved Successfully!');
					});
				});
			});
			
			$(document).on('click','.btnSoftDelete',function(e){
				e.preventDefault();
				$('#modDeleteTask').modal('show');
				var datas =  $(this).parents('tr').data('databody');
				$('.modBtnDelete').data('id',datas.id);
				$('.modBtnDelete').data('type',"SOFT");
			});
			
			$(document).on('click','.btnDelete',function(e){
				e.preventDefault();
				$('#modDeleteTask').modal('show');
				var datas =  $(this).parents('tr').data('databody');
				$('.modBtnDelete').data('id',datas.id);
				$('.modBtnDelete').data('type',"HARD");
			});

			$('.modBtnDelete').click(function(e){
				e.preventDefault();
				var delID = $(this).data('id');
				var deltype = $(this).data('type');
				//reset page count
				pageCount	=	1;
				lastCount	=	1;
				$.ajax({
					'type':'POST',
					'url':'/delete',
					'data':{id:delID,type:deltype},
				}).done((data)=>{

					if(data.error) return toastr.error(data.error);
					$('#modDeleteTask').modal('hide');
					fetchRows();
					return toastr.success('Task Deleted Successfully!');

				});

			});

			$(document).on('click','.btnRestore',function(e){
				e.preventDefault();
				$('#modRestoreTask').modal('show');
				var datas =  $(this).parents('tr').data('databody');
				$('.modBtnRestore').data('id',datas.id);
			});

			$('.modBtnRestore').click(function(e){
				e.preventDefault();
				var resID = $(this).data('id');
				//reset page count
				pageCount	=	1;
				lastCount	=	1;
				$.ajax({
					'type':'POST',
					'url':'/restore',
					'data':{id:resID},
				}).done((data)=>{

					if(data.error) return toastr.error(data.error);
					$('#modRestoreTask').modal('hide');
					fetchRows();
					return toastr.success('Task Restored Successfully!');
				});

			})
			

			//========================================
			//Generic Functions Here
			//========================================

			function fetchRows(){
				$('.btnPager').hide();
				$('#tblTasks').find('tbody').empty();
				$('.trTableLoader').show('fast',function(){
				}).delay(500);
				let selStatusFilter	=	$('#selStatusFilter').val();
				let selItemsPerPage	=	$('#selItemsPerPage').val();

				$.ajax({
					'type':'POST',
					'url':'/getRows',
					'data':{
						pageCount:pageCount,
						selStatusFilter:selStatusFilter,
						selItemsPerPage:selItemsPerPage,
						deleted:'#{deleted}',
					}
				}).done(function(data){
					if(data.error || data.result.length == 0){
						
						$('.trTableLoader').hide('fast',function(){
							$('#tblTasks').find('tbody').append(`<tr><td colspan="4" class="text-center">No Data Available</td></tr>`);
						}).delay(500);
						return 

					}
					let strToAppend = '';
					data.result.forEach((item,index)=>{
						var databody = JSON.stringify(item);
						strToAppend += `<tr data-databody = '`+databody+`'>

									<td>`+item.title+`</td>
									<td class="hideOnMobile">`+renderDesc(item.description,40)+`</td>
									<td>`+renderStatus(item.status)+`</td>
									<td>`+renderButtons(item.deleted)+`</td>
								</tr>`;

						if(index+1 == data.result.length){
							$('.trTableLoader').hide('fast',function(){
								$('#tblTasks').find('tbody').append(strToAppend);
								$('.btnPager').show();
							}).delay(500);
						}
					});
					lastCount = parseInt(data.lastPage) || 1;
					setButtons(data);
					$('.showCurrentPage').text(pageCount +' out of '+ lastCount);
				});
			}

			function renderButtons(data){
				var editBtn = `<a class="btn btn-sm btnEdit text-lightblue" title="Edit">
									<i class="fas fa-edit fa-sm"></i>
								</a>`;
				var viewbtn = `<a class="btn btn-sm btnView text-primary" title="View">
									<i class="fas fa-eye fa-sm"></i>
								</a>`;
				var deleteBtn = `<a class="btn btn-sm btnDelete text-danger" title="Delete">
									<i class="fas fa-trash fa-sm"></i>
								</a>`;
				var btnSoft = `<a class="btn btn-sm btnSoftDelete text-maroon" title="Soft Delete">
									<i class="fas fa-eraser fa-sm"></i>
								</a>`;
				var btnRestore = `<a class="btn btn-sm btnRestore text-success" title="Restore">
									<i class="fas fa-reply fa-sm"></i>
								</a>`;
				let buttons	= '';
				if(parseInt(data) == 0){
					buttons = editBtn + viewbtn + deleteBtn + btnSoft;
				}else{
					buttons = btnRestore + deleteBtn ;
				}

				return buttons;
			}

			function renderStatus(data){
				if(data == "FINISHED"){
					return `<span class="badge badge-success spanStatus">Finished</span>`
				}else if(data == "CANCELLED"){
					return `<span class="badge badge-danger spanStatus">Cancelled</span>`
				}else{
					return `<span class="badge badge-warning spanStatus">Ongoing</span>`
				}
			}

			function renderDesc(text, maxLength) {
				if (text.length <= maxLength) {
					return text;
				}
				
				return text.substring(0, maxLength) + '...';
			}

			function setButtons(data){
				if(data.error){
					$('.btnPageFirst').addClass('disabled');
					$('.btnPagePrev').addClass('disabled');
					$('.btnPageNext').addClass('disabled');
					$('.btnPageLast').addClass('disabled');
				}else{

					$('.btnPageFirst, .btnPagePrev, .btnPageNext, .btnPageLast').removeClass('disabled');
					if(pageCount == 1){
						$('.btnPageFirst').addClass('disabled');
						$('.btnPagePrev').addClass('disabled');
					}else if(pageCount == lastCount){
						$('.btnPageNext').addClass('disabled');
						$('.btnPageLast').addClass('disabled');
					}else{

					}

				}

			}

			function validateFields(form,cb){
				var count =form.find('.required').length;
				var result = 'YES';
				form.find('.required').each(function(index){
					var item = $(this);
					item.parents('.form-group').find('.requiredMessage').remove();
					if(!item.val() && item.is(':visible') ){
						result='NO';
						item.parents('.form-group').append(`<small class='requiredMessage text-white'>*This field is required!</small>`);
						item.focus();
					}
					if(parseInt(count) == parseInt(index+1)){
						console.log(result)
						return cb(result) ;
					}
				});
			}
		})